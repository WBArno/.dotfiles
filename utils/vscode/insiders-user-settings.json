{
    "arduino.useArduinoCli": true,
    "arduino.path": "/run/current-system/sw/bin/",
    "security.workspace.trust.untrustedFiles": "open",
    "files.autoSave": "afterDelay",
    "remote.SSH.useLocalServer": false,
    "remote.SSH.remotePlatform": {
        "unraid": "linux",
        "pihole.local": "linux",
        "steamdeck.local": "linux",
        "steamdeck": "linux"
    },
    "git.autofetch": true,
    "git.confirmSync": false,
    "terminal.explorerKind": "external",
    "terminal.integrated.defaultProfile.osx": "fish",
    "terminal.external.osxExec": "iTerm.app",
    "explorer.confirmDelete": false,
    "editor.minimap.enabled": false,
    "workbench.iconTheme": "catppuccin-latte",
    "workbench.colorTheme": "Catppuccin Frapp√©",
    "workbench.preferredDarkColorTheme": "Catppuccin Macchiato",
    "workbench.preferredLightColorTheme": "Catppuccin Latte",
    "window.autoDetectColorScheme": true,
    "window.zoomLevel": 1,
    "window.zoomPerWindow": false,
    "editor.fontFamily": "MesloLGS Nerd Font Mono, MesloLGS NF, Menlo, Monaco, 'Courier New', monospace",
    "editor.fontLigatures": false,
    "remote.tunnels.access.hostNameOverride": "Charon",
    "git.enableCommitSigning": true,
    "git.enableSmartCommit": true,
    "github.gitProtocol": "ssh",
    "dotfiles.repository": "https://github.com/wbarno/.dotfiles.git",
    "dotfiles.targetPath": "~/.dotfiles",
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "nix.enableLanguageServer": true,
    "nix.serverSettings": {
        "nixd": {
            "formatting": {
                "command": [ "nixpkgs-fmt" ]
            },
            "options": {
                // By default, this entriy will be read from `import <nixpkgs> { }`.
                // You can write arbitary Nix expressions here, to produce valid "options" declaration result.
                // Tip: for flake-based configuration, utilize `builtins.getFlake`
                "nixos": {
                    "expr": "(builtins.getFlake \"/Users/will/.dotfiles/nix/charon\").nixosConfigurations.charon.options"
                },
                "home-manager": {
                    "expr": "(builtins.getFlake \"/Users/will/.dotfiles/nix\").homeConfigurations.will@charon.options"
                },
                // Tip: use ${workspaceFolder} variable to define path
                "nix-darwin": {
                  "expr": "(builtins.getFlake \"/Users/will/.dotfiles/nix/charon\").darwinConfigurations.charon.options"
                }
            }
        }
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "nix.serverPath": "nixd",
    "catppuccin.accentColor": "blue",
    "workbench.commandPalette.experimental.suggestCommands": true,
    "workbench.experimental.cloudChanges.autoStore": "onShutdown",
    "workbench.experimental.cloudChanges.partialMatches.enabled": true,
    "catppuccin.colorOverrides": {},
    "[dockercompose]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    }
}